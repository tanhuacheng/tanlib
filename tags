!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARRAY_LENGTH	test/tmemfill.c	7;"	d	file:
INCMOD_H_	include/incmod.h	20;"	d
MEMFILL_H_	include/memfill.h	20;"	d
MIN	src/memfill.c	16;"	d	file:
QUEUE_ARRAY_H_	queue-array.h	20;"	d
array	test/tmemfill.c	/^static struct data array[ARRAY_LENGTH] = {{0}};$/;"	v	typeref:struct:data	file:
buff	queue-array.h	/^        void *buff;     \/* 指向一块连续的内存区域 *\/$/;"	m	struct:__anon1::__anon2
data	queue-array.h	/^    } data;$/;"	m	struct:__anon1	typeref:struct:__anon1::__anon2
data	test/tmemfill.c	/^struct data {$/;"	s	file:
front	queue-array.h	/^    volatile uint16_t front;$/;"	m	struct:__anon1
incmod	include/incmod.h	/^static inline uint32_t incmod (uint32_t inc, const uint32_t mod)$/;"	f
main	test/tmemfill.c	/^int main (int argc, char* argv[])$/;"	f
memfill	src/memfill.c	/^void* memfill (void* restrict dstp, size_t dstsize, const void* restrict patp, size_t patsize)$/;"	f
memfill2	test/tmemfill.c	/^static void* memfill2 (void* restrict dstp, size_t dstsize, const void* restrict patp, size_t patsize)$/;"	f	file:
mlen	queue-array.h	/^        uint16_t mlen;  \/* buff最多可以存放的数据单元数 *\/$/;"	m	struct:__anon1::__anon2
queue_array_cal_length	queue-array.c	/^static inline uint16_t queue_array_cal_length ($/;"	f	file:
queue_array_fill	queue-array.c	/^int32_t queue_array_fill (queue_array_t *q, const void *buff, uint16_t length)$/;"	f
queue_array_fill_write	queue-array.c	/^static int32_t queue_array_fill_write (queue_array_t *q, const void *buff, uint16_t length, const uint8_t type)$/;"	f	file:
queue_array_init	queue-array.c	/^int32_t queue_array_init (queue_array_t *q, void *buff, const size_t size, const uint16_t mlen)$/;"	f
queue_array_length	queue-array.c	/^int32_t queue_array_length (const queue_array_t *q)$/;"	f
queue_array_read	queue-array.c	/^int32_t queue_array_read (queue_array_t *q, void *buff, uint16_t length)$/;"	f
queue_array_t	queue-array.h	/^} queue_array_t;$/;"	t	typeref:struct:__anon1
queue_array_valid	queue-array.c	/^static inline bool queue_array_valid (const queue_array_t *q)$/;"	f	file:
queue_array_write	queue-array.c	/^int32_t queue_array_write (queue_array_t *q, const void *buff, uint16_t length)$/;"	f
rear	queue-array.h	/^    volatile uint16_t rear;$/;"	m	struct:__anon1
show_array	test/tmemfill.c	/^static void show_array (void)$/;"	f	file:
size	queue-array.h	/^        size_t size;    \/* 数据单元占用字节数 *\/$/;"	m	struct:__anon1::__anon2
x	test/tmemfill.c	/^    int x;$/;"	m	struct:data	file:
y	test/tmemfill.c	/^    int y;$/;"	m	struct:data	file:
